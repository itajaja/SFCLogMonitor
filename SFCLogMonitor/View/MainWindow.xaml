<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:SFCLogMonitor.ViewModel"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:utils="clr-namespace:SFCLogMonitor.Utils"
    xmlns:model="clr-namespace:SFCLogMonitor.Model"
    mc:Ignorable="d" x:Class="SFCLogMonitor.View.MainWindow"
    Title="SFC Log Monitor" Height="500" Width="850" MinHeight="350" MinWidth="150"
    Icon="/SFCLogMonitor;component/Resources/862154ed6b67c24b.png"
    Name="Main" Closing="MainWindow_OnClosing">
    <Window.Resources>
        <SolidColorBrush x:Key="ToolBrush" Color="#FFF4F4F4" />
        <viewModel:MainWindowViewModel x:Key="Vm" />
        <ObjectDataProvider x:Key="DataFromEnum"
                            MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="utils:TimeUnit" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid DataContext="{Binding Source={StaticResource Vm}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ToolBar ToolBarTray.IsLocked="True">
            <ToggleButton Name="OptionsButton" IsChecked="True">Options</ToggleButton>
            <Separator />
            <Button>Preferences</Button>
            <Button>About</Button>
        </ToolBar>
        <Grid Grid.Row="1"
              Visibility="{Binding ElementName=OptionsButton, Path=IsChecked, Converter={StaticResource BooleanToVisibility}}"
              Background="{StaticResource ToolBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="{x:Type Button}" x:Key="OptionsButtonStyle">
                    <Setter Property="Margin" Value="3" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Width" Value="80" />
                    <Setter Property="Height" Value="24" />
                </Style>
            </Grid.Resources>
            <GroupBox Grid.RowSpan="2" Header="Filtering">
                <StackPanel>
                    <Button x:Name="SearchButton" Content="Filter" Click="SearchButton_Click" Style="{StaticResource OptionsButtonStyle}"/>
                    <Button x:Name="ExcluceButton" Content="Exclude Files" Click="ExcludeButton_Click" Style="{StaticResource OptionsButtonStyle}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Header="Time">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <CheckBox Name="TimeCheckBox" Content="Show events from the last:" Margin="0,0,0,5"
                              IsChecked="{Binding IsFilteringTimeEnabled}" />
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <TextBox Width="40" VerticalAlignment="Top"
                                 IsEnabled="{Binding ElementName=TimeCheckBox, Path=IsChecked}"
                                 Text="{Binding Path=FilteringTime}" />
                        <ComboBox VerticalAlignment="Top"
                                  IsEnabled="{Binding ElementName=TimeCheckBox, Path=IsChecked}"
                                  ItemsSource="{Binding Source={StaticResource DataFromEnum}}"
                                  SelectedItem="{Binding FilteringTimeUnit}" Width="70" Margin="4,0" />
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Header="Actions">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Button Click="ClearButton_Click" Style="{StaticResource OptionsButtonStyle}">Clear</Button>
                    <Button Grid.Row="0" Grid.Column="1" IsEnabled="False" ToolTip="Operation not available in the current version" Style="{StaticResource OptionsButtonStyle}">Analyze</Button>
                    <Button Grid.Row="1" Grid.Column="0" Click="Button_Click" HorizontalContentAlignment="Left" Padding="10,0,0,0">
                        <Button.Resources>
                            <Grid x:Key="PausedGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image Source="/SFCLogMonitor;component/Resources/Symbols_Play_32xLG.png" />
                                <TextBlock Grid.Column="1" Text="Start" VerticalAlignment="Center"/>
                            </Grid>
                            <Grid x:Key="StartedGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image Source="/SFCLogMonitor;component/Resources/Symbols_Pause_32xLG.png"/>
                                <TextBlock Grid.Column="1" Text="Pause" VerticalAlignment="Center"/>
                            </Grid>
                        </Button.Resources>
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource OptionsButtonStyle}">
                                <Setter Property="Content" Value="{StaticResource StartedGrid}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPaused}" Value="True">
                                        <Setter Property="Button.Content" Value="{StaticResource PausedGrid}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </GroupBox>
        </Grid>
        <ListView Grid.Row="2" Name="StringListView" ItemsSource="{Binding StringListViewSource.View}"
                  ItemTemplate="{DynamicResource ListViewRowTemplate}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.InputBindings>
                <KeyBinding Command="{Binding Source={StaticResource Vm}, Path=CopyRowsCommand}" CommandParameter="{Binding ElementName=StringListView}" Key="C" Modifiers="Control" />
            </ListView.InputBindings>
            <ListView.ContextMenu>
                <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}" >
                    <MenuItem InputGestureText="Ctrl+C" Header="Copy" Command="{Binding Source={StaticResource Vm}, Path=CopyRowsCommand}" CommandParameter="{Binding}" />
                    <MenuItem Header="Open Log File" Command="{Binding Source={StaticResource Vm}, Path=OpenLogfileCommand}" CommandParameter="{Binding}" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Resources>
                <DataTemplate x:Key="ListViewRowTemplate" DataType="model:Row">
                    <Grid ToolTip="{Binding Text}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Text}" TextTrimming="CharacterEllipsis" />
                        <TextBlock Grid.Column="1" Foreground="Gray">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} ({1}:{2}:{3})">
                                    <Binding Path="LogFile.FileName" />
                                    <Binding Path="Date.Hour" />
                                    <Binding Path="Date.Minute" />
                                    <Binding Path="Date.Second" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListView.Resources>
        </ListView>
        <Border Grid.Row="3" BorderThickness="1" BorderBrush="Gray">
            <Grid Background="{StaticResource ToolBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}Monitoring started on {0}/{1}/{2} {3}:{4}:{5}">
                            <Binding Path="BeginMonitoringTime.Month" />
                            <Binding Path="BeginMonitoringTime.Day" />
                            <Binding Path="BeginMonitoringTime.Year" />
                            <Binding Path="BeginMonitoringTime.Hour" />
                            <Binding Path="BeginMonitoringTime.Minute" />
                            <Binding Path="BeginMonitoringTime.Second" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Grid.Column="2">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} rows stored since beginning (limit {1})">
                            <Binding Path="StringList.Count" />
                            <Binding Path="RowLimit" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </Border>
    </Grid>
</Window>